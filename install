#!/usr/bin/env bash

LHELPER_PACKAGE_VERSION=2

recipes_branch=master
if [[ "$1" == "--use="* ]]; then
    recipes_branch="${1#--use=}"
    echo "Using recipes from branch: ${recipes_branch}"
    shift
fi

if [ $# != "1" ]; then
    echo "Usage: $0 <prefix>"
    exit 1
fi

pushd_quiet () { builtin pushd "$@" > /dev/null; }
popd_quiet () { builtin popd > /dev/null; }

have_command () {
    command -v "$1" &> /dev/null
}

find_compiler () {
    if [ -z ${CC+x} ]; then
        if have_command gcc; then
            echo gcc
        elif have_command clang; then
            echo clang
        else
            echo "error: cannot find a C compiler."
            echo "The variable CC is not set and neither gcc or clang are found."
            exit 1
        fi
    else
        echo "$CC"
    fi
}

lhcompile () {
    local exec_name="$1"
    if [[ "$OSTYPE" == "msys"* || "$OSTYPE" == "mingw"* || "$OSTYPE" == "cygwin"* ]]; then
        exec_name="${exec_name}.exe"
    fi
    local objs=()
    for src in "${@:2}"; do
        obj="${src/%.c/.o}"
        objs+=("$obj")
    done
    $lhcomp -c "$src" -o "$obj"
    $lhcomp -o $exec_name "${objs[@]}" && rm "${objs[@]}"
}

PREFIX="$1"

if [ -z "${DESTDIR+x}" ]; then
    DESTDIR="$PREFIX"
fi

recipes_repo="https://github.com/franko/lhelper-recipes.git"
recipes_dir="$DESTDIR/share/lhelper/recipes"

lhcomp="$(find_compiler)"

# warning: if DESTDIR is ~/.local, /usr, /usr/local the completion are going
# to work but for other prefix they may not work.
# Bash will use:
#   $HOME/.local/share/bash-completion/completions
#   $XDG_DATA_HOME/bash-completion/completions
#   $BASH_COMPLETION_USER_DIR/completions
unset bash_compdir
if [[ $OSTYPE == "darwin"* ]]; then
    if command -v brew >/dev/null 2>&1; then
        bash_compdir="$(brew --prefix)/etc/bash_completion.d"
    else
        echo "Warning: bash completion unsupported if Homebrew is not installed"
    fi
else
    BCDIR="share/bash-completion/completions"
    # We search for a bash completion directory that already exists and the first found
    for dirpath in "$DESTDIR/$BCDIR" "/usr/$BCDIR" "/etc/bash_completion.d" "/usr/local/$BCDIR" "$HOME/.local/$BCDIR"; do
        if [ -d "$dirpath" ]; then
            bash_compdir="$dirpath"
            break
        fi
    done
fi

echo "Installing lhelper with prefix $DESTDIR"
if [ ! -z ${bash_compdir+x} ]; then
    echo "Installing bash completion script in $bash_compdir/lhelper"
else
    echo "Warning: no suitable directory found for bash completions, script not installed"
fi

mkdir -p "$DESTDIR/bin"
mkdir -p "$DESTDIR/share/lhelper/patch"
# mkdir -p "$DESTDIR/share/lhelper/containers"
mkdir -p "$DESTDIR/var/lhelper/archives"
mkdir -p "$DESTDIR/var/lhelper/packages/$LHELPER_PACKAGE_VERSION"
mkdir -p "$DESTDIR/var/lhelper/digests"

pushd_quiet src
for modname in path-replace sort cmp realpath; do
    echo "compiling lh-$modname"
    lhcompile lh-$modname lh-$modname.c
    if [ $? -ne 0 ]; then
        echo "error: cannot compile helper tool lh-$modname"
        exit 1
    fi
    cp lh-$modname "$DESTDIR/bin"
done
popd_quiet

for filename in common-lhelper.sh cpu-lhelper.sh build-helper.sh create-env.sh lhelper-bash-init; do
    cp "$filename" "$DESTDIR/share/lhelper"
done
cp patch/*.patch "$DESTDIR/share/lhelper/patch"
cp lhelper "$DESTDIR/bin"
rm -fr "$DESTDIR/share/lhelper/containers"
cp -r containers "$DESTDIR/share/lhelper"

if [ ! -z ${bash_compdir+x} ]; then
    mkdir -p "$bash_compdir"
    cp lhelper-completion.bash "${bash_compdir}/lhelper"
fi

if [ -d "$recipes_dir" ]; then
	echo "Deleting existing recipes dir: $recipes_dir"
	rm -fr "$recipes_dir"
fi

chmod a+x "$DESTDIR/bin/lhelper"

echo -n "Installing recipes... "
if git clone --depth 1 -b "$recipes_branch" "$recipes_repo" "$recipes_dir" &> /dev/null; then
    echo "done"
else
    echo "fail"
    echo "Error cloning recipes from $recipes_repo"
    exit 1
fi
